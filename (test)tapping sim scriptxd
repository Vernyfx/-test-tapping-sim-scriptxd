local Library = loadstring(game:HttpGet("https://raw.githubusercontent.com/xHeptc/Kavo-UI-Library/main/source.lua"))()
local Window = Library.CreateLib("Tapping Simulator By Vernyfx", "DarkTheme")

--Main
local Main = Window:NewTab("Main")
local MainSection = Main:NewSection("AutoFarm")

-- Main auto farm
MainSection:NewButton("Rebirth 1X", "Rebirths once", function()
local args = {
    [1] = 1
}
game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(unpack(args))
end)

MainSection:NewToggle("AutoTap", "Automatically Taps for you", function(state)
    if state then
        _G.autoTap = true;


local remotePath = game:GetService("ReplicatedStorage").Events;


spawn(function()
while _G.autoTap == true do
     remotePath.Tap:FireServer()

    wait()
end
end)
    else
        _G.autoTap = false;


local remotePath = game:GetService("ReplicatedStorage").Events;


spawn(function()
while _G.autoTap == true do
     remotePath.Tap:FireServer()

    wait()
end
end)
    end
end)
--auto rebirth

MainSection:NewToggle("Autorebirth", "Automatically Rebirths the amount you selected", function(state)
        _G.Autorebirth = state
end)


MainSection:NewDropdown("AutoRebirth", "DropdownInf", {"1", "5", "10", "20", "100", "500", "2000", "4000", "8000",}, function(currentOption)
    _G.open = currentOption
    print(_G.open)
end)


task.spawn(function() -- spawns a function, makes it so it doesnt stop the script past this function
    while task.wait() do -- loop
        if _G.Autorebirth then -- This is like saying if _G.Autorebirth == true
            if _G.open ~= nil then -- Checks if a rebirth value from the dropdown is selected
                game:GetService("ReplicatedStorage").Events.Rebirth:FireServer(tonumber(_G.open)) -- rebirths with the select value from the dropdown
            end
        end
    end
end)

--auto egg


local Main = Window:NewTab("AutoEgg")
local MainSection = Main:NewSection("Auto Eggs")
MainSection:NewToggle("Auto Wood Egg", "Automatically buys Wood Egg", function(state)
    if state then
        _G.AutoEgg = true;
 while _G.AutoEgg ==true do 
    local args = {
        [1] = {},
        [2] = "Wood Egg",
        [3] = 1
    }
    
    game:GetService("ReplicatedStorage").Events.HatchEgg:InvokeServer(unpack(args))
end 
    else
        _G.AutoEgg = false;
 while _G.AutoEgg ==true do 
    local args = {
        [1] = {},
        [2] = "Wood Egg",
        [3] = 1
    }
    
    game:GetService("ReplicatedStorage").Events.HatchEgg:InvokeServer(unpack(args))
end 
    end
end)

